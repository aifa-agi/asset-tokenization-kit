// File: @/components/investor/test-tokens.tsx
// Faucet –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö USDT –∏ ETH

'use client'

import { useState } from 'react'
import { useWeb3Status } from '@/providers/web-3-provider'
import { useWriteContract, useWaitForTransactionReceipt, useReadContract } from 'wagmi'
import { formatUnits, parseUnits } from 'viem'
import { toast } from 'sonner'
import { CONTRACTS } from '@/lib/web3/conntracts/addresses'

// Minimal MockUSDT ABI
const mockUsdtABI = [
  {
    type: 'function',
    name: 'mint',
    stateMutability: 'nonpayable',
    inputs: [
      { type: 'address', name: 'to' },
      { type: 'uint256', name: 'amount' },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'balanceOf',
    stateMutability: 'view',
    inputs: [{ type: 'address', name: 'account' }],
    outputs: [{ type: 'uint256', name: '' }],
  },
  {
    type: 'function',
    name: 'decimals',
    stateMutability: 'view',
    inputs: [],
    outputs: [{ type: 'uint8', name: '' }],
  },
] as const

export function TestTokens() {
  const { address, isConnected } = useWeb3Status()
  const [txHash, setTxHash] = useState<`0x${string}` | undefined>()

  // –ß—Ç–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ USDT
  const { data: usdtBalance, refetch: refetchBalance } = useReadContract({
    address: CONTRACTS.mockUSDT,
    abi: mockUsdtABI,
    functionName: 'balanceOf',
    args: address ? [address] : undefined,
    query: { enabled: !!address },
  })

  // Write —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è mint
  const { writeContractAsync, isPending } = useWriteContract()

  // –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  const { isLoading: isConfirming, isSuccess } = useWaitForTransactionReceipt({
    hash: txHash,
  })

  // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  if (isSuccess && txHash) {
    refetchBalance()
    toast.success('‚úÖ USDT –ø–æ–ª—É—á–µ–Ω—ã!', { id: 'mint-success' })
    setTxHash(undefined)
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è USDT
  const handleMintUSDT = async () => {
    if (!address) {
      toast.error('üîå –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª—ë–∫')
      return
    }

    try {
      const toastId = toast.loading('ü™ô –ü–æ–ª—É—á–µ–Ω–∏–µ 10 USDT...')

      // Mint 10 USDT (6 decimals)
      const hash = await writeContractAsync({
        address: CONTRACTS.mockUSDT,
        abi: mockUsdtABI,
        functionName: 'mint',
        args: [address, parseUnits('10', 6)], // 10 USDT
      })

      setTxHash(hash)
      toast.success('üì§ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞', { id: toastId })
      toast.loading('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...', { id: 'mint-success' })

      console.log('‚úÖ Mint USDT transaction:', hash)
    } catch (error: any) {
      console.error('‚ùå Mint error:', error)

      if (error.message?.includes('User rejected')) {
        toast.error('üö´ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞')
      } else {
        toast.error('‚ùå –û—à–∏–±–∫–∞: ' + (error.shortMessage || error.message))
      }
    }
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
  const formattedBalance = usdtBalance ? formatUnits(usdtBalance, 6) : '0'

  return (
    <div className="max-w-2xl mx-auto">
      <div className="bg-gradient-to-br from-orange-50 to-yellow-50 rounded-lg shadow-lg border-2 border-orange-200 p-8">
        
        {/* Header */}
        <div className="text-center mb-8">
          <div className="text-6xl mb-4">ü™ô</div>
          <h2 className="text-3xl font-bold text-gray-900 mb-2">
            –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã
          </h2>
          <p className="text-gray-600">
            –ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ USDT –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –∞–∫—Ç–∏–≤–æ–≤
          </p>
        </div>

        {/* Wallet Status */}
        {!isConnected ? (
          <div className="bg-yellow-100 border-2 border-yellow-300 rounded-lg p-6 text-center">
            <p className="text-yellow-800 font-medium">
              üîå –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª—ë–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
            </p>
          </div>
        ) : (
          <>
            {/* Balance Display */}
            <div className="bg-white rounded-lg p-6 mb-6 border-2 border-gray-200">
              <div className="flex justify-between items-center">
                <div>
                  <p className="text-sm text-gray-600 mb-1">–í–∞—à –±–∞–ª–∞–Ω—Å USDT</p>
                  <p className="text-3xl font-bold text-emerald-600">
                    {formattedBalance} USDT
                  </p>
                </div>
                <div className="text-5xl">üí∞</div>
              </div>
            </div>

            {/* Mint Button */}
            <button
              onClick={handleMintUSDT}
              disabled={isPending || isConfirming}
              className={`w-full py-4 px-6 rounded-lg font-bold text-lg transition-all shadow-lg
                ${isPending || isConfirming
                  ? 'bg-gray-400 text-gray-600 cursor-not-allowed'
                  : 'bg-gradient-to-r from-orange-500 to-yellow-500 text-white hover:from-orange-600 hover:to-yellow-600 hover:shadow-xl'
                }`}
            >
              {isPending ? 'üì§ –û—Ç–ø—Ä–∞–≤–∫–∞...' : isConfirming ? '‚è≥ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ...' : 'üéÅ –ü–æ–ª—É—á–∏—Ç—å 10 USDT'}
            </button>

            {/* Info */}
            <div className="mt-6 space-y-3">
              <div className="flex items-start gap-3 p-3 bg-blue-50 rounded-lg">
                <span className="text-2xl">‚ÑπÔ∏è</span>
                <div className="text-sm text-blue-900">
                  <p className="font-medium mb-1">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</p>
                  <p className="text-blue-700">
                    –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ MetaMask –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. 
                    –í—ã –ø–ª–∞—Ç–∏—Ç–µ —Ç–æ–ª—å–∫–æ gas (‚âà $0.01), USDT –≤—ã–¥–∞—é—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ.
                  </p>
                </div>
              </div>

              <div className="flex items-start gap-3 p-3 bg-green-50 rounded-lg">
                <span className="text-2xl">üí°</span>
                <div className="text-sm text-green-900">
                  <p className="font-medium mb-1">–ß—Ç–æ –¥–∞–ª—å—à–µ?</p>
                  <p className="text-green-700">
                    –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è USDT –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ö–∞—Ç–∞–ª–æ–≥ –∞–∫—Ç–∏–≤–æ–≤" 
                    –∏ –∫—É–ø–∏—Ç–µ —Ç–æ–∫–µ–Ω—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
                  </p>
                </div>
              </div>
            </div>

            {/* Transaction Link */}
            {txHash && (
              <div className="mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
                <p className="text-xs font-medium text-blue-900 mb-2">
                  üì° –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
                </p>
                <a
                  href={`https://sepolia.etherscan.io/tx/${txHash}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="text-sm text-blue-600 hover:underline break-all"
                >
                  {txHash}
                </a>
              </div>
            )}

            {/* Contract Info */}
            <div className="mt-6 p-4 bg-gray-50 rounded-lg border border-gray-200">
              <p className="text-xs font-medium text-gray-700 mb-2">
                üîó MockUSDT –∫–æ–Ω—Ç—Ä–∞–∫—Ç
              </p>
              <a
                href={`https://sepolia.etherscan.io/address/${CONTRACTS.mockUSDT}`}
                target="_blank"
                rel="noopener noreferrer"
                className="text-xs text-gray-600 hover:underline break-all font-mono"
              >
                {CONTRACTS.mockUSDT}
              </a>
            </div>
          </>
        )}
      </div>

      {/* Additional Info */}
      <div className="mt-6 p-4 bg-white rounded-lg shadow border border-gray-200">
        <h3 className="font-bold text-gray-900 mb-3">üìö –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
        <ul className="space-y-2 text-sm text-gray-700">
          <li className="flex items-start gap-2">
            <span className="text-emerald-600 font-bold">‚úì</span>
            <span>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Å–µ—Ç—å Sepolia ‚Äî –≤—Å–µ —Ç–æ–∫–µ–Ω—ã –±–µ—Å–ø–ª–∞—Ç–Ω—ã</span>
          </li>
          <li className="flex items-start gap-2">
            <span className="text-emerald-600 font-bold">‚úì</span>
            <span>–î–ª—è gas –Ω—É–∂–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π ETH (–ø–æ–ª—É—á–∏—Ç–µ –Ω–∞ sepoliafaucet.com)</span>
          </li>
          <li className="flex items-start gap-2">
            <span className="text-emerald-600 font-bold">‚úì</span>
            <span>–ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å USDT –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑</span>
          </li>
          <li className="flex items-start gap-2">
            <span className="text-emerald-600 font-bold">‚úì</span>
            <span>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç—Å—è –∑–∞ 10-30 —Å–µ–∫—É–Ω–¥</span>
          </li>
        </ul>
      </div>
    </div>
  )
}
